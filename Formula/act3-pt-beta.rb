# frozen_string_literal: true

require_relative "../lib/registry_download"

class Act3PtBeta < Formula
  desc "ACT3 Project Tool Beta - ACT3's project generator, updater, and automator"
  homepage "https://git.act3-ace.com/devsecops/act3-pt/-/tree/beta"
  version "2.0.0-beta.6"

  depends_on "glab"
  depends_on "typst"

  # Generated by https://git.act3-ace.com/ace/homebrew-ace-tools/-/blob/master/bin/formulize.sh
  on_macos do
    if Hardware::CPU.intel?
      url "reg.git.act3-ace.com/ace/homebrew-ace-tools/formula/act3-pt-beta@sha256:5d7d4fb340d075923a6d9733ab79096ab35ff8ac25f0c00ec800ddc28a730b5c",
          using: BlobDownloadStrategy
      sha256 "5d7d4fb340d075923a6d9733ab79096ab35ff8ac25f0c00ec800ddc28a730b5c"
    end
    if Hardware::CPU.arm?
      url "reg.git.act3-ace.com/ace/homebrew-ace-tools/formula/act3-pt-beta@sha256:3767b512cda8407f8a56fcdb6289ca404b5ecb78dc6f08745de005dba577a0eb",
          using: BlobDownloadStrategy
      sha256 "3767b512cda8407f8a56fcdb6289ca404b5ecb78dc6f08745de005dba577a0eb"
    end
  end

  # Generated by https://git.act3-ace.com/ace/homebrew-ace-tools/-/blob/master/bin/formulize.sh
  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "reg.git.act3-ace.com/ace/homebrew-ace-tools/formula/act3-pt-beta@sha256:9bbea7e2ce669e6cf36690e1b2006c2bf07762fb05d38363f0afb192c8351a88",
          using: BlobDownloadStrategy
      sha256 "9bbea7e2ce669e6cf36690e1b2006c2bf07762fb05d38363f0afb192c8351a88"
    end
    if Hardware::CPU.intel?
      url "reg.git.act3-ace.com/ace/homebrew-ace-tools/formula/act3-pt-beta@sha256:af57196016b8e9f0968fc226e43ec68d54b5c30cc3dcc9df25347e28038e06ee",
          using: BlobDownloadStrategy
      sha256 "af57196016b8e9f0968fc226e43ec68d54b5c30cc3dcc9df25347e28038e06ee"
    end
  end

  conflicts_with "act3-pt", because: "act3-pt and act3-pt-beta install conflicting executables"

  def install
    bin.install "act3-pt"
    generate_completions_from_executable(bin/"act3-pt", "completion")

    # Generate manpages
    mkdir "man" do
      system bin/"act3-pt", "gendocs", "man", "."
      man1.install Dir["*.1"]
      man5.install Dir["*.5"]
    end

    # Generate JSON Schema definitions
    # Use pkgetc here so path doesn't change over version numbers
    # Cannot use symlink for this because VS Code cannot follow symlinks for schema files
    mkdir pkgetc do
      system bin/"act3-pt", "genschema", "."
    end
  end

  def caveats
    <<~EOS
      Add the following to VS Code's settings.json file to enable YAML file validation:

        "yaml.schemas": {
          "file://#{pkgetc}/project.act3-ace.io.schema.json": [
            ".project.yaml",
            ".act3-pt.yaml",
            ".blueprint.yaml",
            ".act3-template.yaml",
            ".blueprintcatalog.yaml",
            "catalog.yaml"
          ],
          "file://#{pkgetc}/pt.act3-ace.io.schema.json": [
            "act3-pt-config.yaml",
            "act3/pt/config.yaml"
          ]
        }

      Check out the quick start guide to get started with act3-pt:
        act3-pt info quick-start-guide
    EOS
  end

  test do
    system "#{bin}/act3-pt", "version"
  end
end
