# frozen_string_literal: true

require_relative "../lib/registry_download"

class Act3PtBeta < Formula
  desc "ACT3 Project Tool Beta - ACT3's project generator, updater, and automator"
  homepage "https://git.act3-ace.com/devsecops/act3-pt/-/tree/beta"
  version "2.0.0-beta.13"

  depends_on "glab"
  depends_on "typst"

  # Generated by https://git.act3-ace.com/ace/homebrew-ace-tools/-/blob/master/bin/formulize.sh
  on_macos do
    if Hardware::CPU.intel?
      url "reg.git.act3-ace.com/devsecops/act3-pt/releases/act3-pt@sha256:69f33a0d702ceee5543e21157650d0f2e17dc8df9b46a27ee7a47d6f5bc37659",
          using: BlobDownloadStrategy
      sha256 "69f33a0d702ceee5543e21157650d0f2e17dc8df9b46a27ee7a47d6f5bc37659"
    end
    if Hardware::CPU.arm?
      url "reg.git.act3-ace.com/devsecops/act3-pt/releases/act3-pt@sha256:ac1401b906d432a7c309c2b1d8d2cf9f3cf2449499a0618075716b8f55734edc",
          using: BlobDownloadStrategy
      sha256 "ac1401b906d432a7c309c2b1d8d2cf9f3cf2449499a0618075716b8f55734edc"
    end
  end

  # Generated by https://git.act3-ace.com/ace/homebrew-ace-tools/-/blob/master/bin/formulize.sh
  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "reg.git.act3-ace.com/devsecops/act3-pt/releases/act3-pt@sha256:f723e451f1c7927ffb9537c6e6965194644150ffe8481adaeb0d6560b060f7b0",
          using: BlobDownloadStrategy
      sha256 "f723e451f1c7927ffb9537c6e6965194644150ffe8481adaeb0d6560b060f7b0"
    end
    if Hardware::CPU.intel?
      url "reg.git.act3-ace.com/devsecops/act3-pt/releases/act3-pt@sha256:23eb89ef3d2360d25736ec947ce77e8a629dc46bf3b05f6fde2eca3795cb237c",
          using: BlobDownloadStrategy
      sha256 "23eb89ef3d2360d25736ec947ce77e8a629dc46bf3b05f6fde2eca3795cb237c"
    end
  end

  conflicts_with "act3-pt", because: "act3-pt and act3-pt-beta install conflicting executables"

  def install
    bin.install "act3-pt"
    generate_completions_from_executable(bin/"act3-pt", "completion")

    # Generate manpages
    mkdir "man" do
      system bin/"act3-pt", "gendocs", "man", "."
      man1.install Dir["*.1"]
      man5.install Dir["*.5"]
    end

    # Generate JSON Schema definitions
    # Use pkgetc here so path doesn't change over version numbers
    # Cannot use symlink for this because VS Code cannot follow symlinks for schema files
    mkdir pkgetc do
      system bin/"act3-pt", "genschema", "."
    end
  end

  def caveats
    <<~EOS
      Add the following to VS Code's settings.json file to enable YAML file validation:

        "yaml.schemas": {
          "file://#{pkgetc}/project.act3-ace.io.schema.json": [
            ".project.yaml",
            ".act3-pt.yaml",
            ".blueprint.yaml",
            ".act3-template.yaml",
            ".blueprintcatalog.yaml",
            "catalog.yaml"
          ],
          "file://#{pkgetc}/pt.act3-ace.io.schema.json": [
            "act3-pt-config.yaml",
            "act3/pt/config.yaml"
          ]
        }

      Check out the quick start guide to get started with act3-pt:
        act3-pt info quick-start-guide
    EOS
  end

  test do
    system "#{bin}/act3-pt", "version"
  end
end
